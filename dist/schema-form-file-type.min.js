/*! angular-schema-file-type 2015-04-28 */
"use strict";var ngSchemaFormFileType=angular.module("ngSchemaFormFileType",["angularFileUpload"]);angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(a,b){b.addMapping("bootstrapDecorator","files","files.html");var c=function(a,b){"array"===b.type&&"files"===b.format&&(void 0!==b.items.properties.size&&void 0!==b.items.properties.size.maximum&&(b.items.properties.size.validationMessage={103:"This file is too large. Maximum size allowed is "+Math.floor(b.items.properties.size.maximum/1e3)+" ko."}),void 0!==b.items.properties.mimeType&&void 0!==b.items.properties.mimeType["enum"]&&(b.items.properties.mimeType.validationMessage={1:"Wrong file type. Allowed types are "+b.items.properties.mimeType["enum"]+"."}),void 0!==b.minItems&&void 0!==b.maxItems&&(b.validationMessage={400:"You have to upload at least "+b.minItems+" files.",401:"You can't upload more than "+b.maxItems+" files.",302:"File(s) missing."}))};a.defaults.array.unshift(c)}]),ngSchemaFormFileType.service("ImageUploadCleaner",function(){this.clone=function(a){var b;if(null==a||"object"!=typeof a)return a;if(a instanceof Date)return b=new Date,b.setTime(a.getTime()),b;if(a instanceof Array){b=[];for(var c=0,d=a.length;d>c;c++)b[c]=this.clone(a[c]);return b}if(a instanceof Object){b={};for(var e in a)a.hasOwnProperty(e)&&(b[e]=this.clone(a[e]));return b}throw new Error("Unable to copy obj! Its type isn't supported.")},this.clean=function(a){for(var b in a)void 0!=a[b].dataUrl?a[b]=a[b].token:"object"==typeof a[b]&&null!==a[b]&&this.clean(a[b])},this.fullClean=function(a,b){for(var c in a)b.indexOf(c)>=0?a[c]=a[c].length>0?a[c][0].token:"":"object"==typeof a[c]&&null!==a[c]&&this.clean(a[c])}}),ngSchemaFormFileType.directive("ngSchemaFile",["$upload","$timeout","$q",function(a,b,c){return{restrict:"A",scope:!0,require:"ngModel",link:function(d){d.fileReaderSupported=null!=window.FileReader&&(null==window.FileAPI||0!=FileAPI.html5),d.upload=function(a){1==d.form.key.length?d.model[d.form.key[0]]=[]:2==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]]=[]:3==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]]=[]:4==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][d.form.key[3]]=[]:console.log("Error");for(var b=0;b<a.length;b++){var c=a[b];1==d.form.key.length?d.model[d.form.key[0]].push({token:b.toString(),mimeType:c.type,size:c.size,name:c.name,progress:0}):2==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]].push({token:b.toString(),mimeType:c.type,size:c.size,name:c.name,progress:0}):3==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]].push({token:b.toString(),mimeType:c.type,size:c.size,name:c.name,progress:0}):4==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][d.form.key[3]].push({token:b.toString(),mimeType:c.type,size:c.size,name:c.name,progress:0}):console.log("Error"),1==d.form.key.length?d.generateThumb(c,b).then(function(a){d.model[d.form.key[0]][a.i].dataUrl=a.dataUrl}):2==d.form.key.length?d.generateThumb(c,b).then(function(a){d.model[d.form.key[0]][d.form.key[1]][a.i].dataUrl=a.dataUrl}):3==d.form.key.length?d.generateThumb(c,b).then(function(a){d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][a.i].dataUrl=a.dataUrl}):4==d.form.key.length?d.generateThumb(c,b).then(function(a){d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][d.form.key[3]][a.i].dataUrl=a.dataUrl}):console.log("Error"),void 0!==d.form.schema.items.properties.size&&void 0!==d.form.schema.items.properties.size.maximum&&d.form.schema.items.properties.size.maximum<c.size||(void 0===d.form.schema.items.properties.mimeType||void 0===d.form.schema.items.properties.mimeType["enum"]||-1!=d.form.schema.items.properties.mimeType["enum"].indexOf(c.type))&&(1==d.form.key.length?d.uploadFile(c,d.form.key,b).then(function(a){d.model[d.form.key[0]][a.index].token=a.token,d.model[d.form.key[0]][a.index].mimeType=a.mimeType,d.model[d.form.key[0]][a.index].size=a.size}):2==d.form.key.length?d.uploadFile(c,d.form.key,b).then(function(a){d.model[d.form.key[0]][d.form.key[1]][a.index].token=a.token,d.model[d.form.key[0]][d.form.key[1]][a.index].mimeType=a.mimeType,d.model[d.form.key[0]][d.form.key[1]][a.index].size=a.size}):3==d.form.key.length?d.uploadFile(c,d.form.key,b).then(function(a){d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][a.index].token=a.token,d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][a.index].mimeType=a.mimeType,d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][a.index].size=a.size}):4==d.form.key.length?d.uploadFile(c,d.form.key,b).then(function(a){d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][d.form.key[3]][a.index].token=a.token,d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][d.form.key[3]][a.index].mimeType=a.mimeType,d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][d.form.key[3]][a.index].size=a.size}):console.log("Error"))}d.revalidate()},d.uploadFile=function(b,e,f){var g=c.defer();return a.upload({url:d.form.endpoint,file:b,fields:{index:f}}).progress(function(a){var b=parseInt(100*a.loaded/a.total);a.config.file.filesProgress=b,1==d.form.key.length?d.model[d.form.key[0]][a.config.fields.index].progress=b:2==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]][a.config.fields.index].progress=b:3==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][a.config.fields.index].progress=b:4==d.form.key.length?d.model[d.form.key[0]][d.form.key[1]][d.form.key[2]][d.form.key[3]][a.config.fields.index].progress=b:console.log("Error")}).success(function(a){g.resolve(a)}),g.promise},d.generateThumb=function(a,e){var f=c.defer();return null!=a&&d.fileReaderSupported&&a.type.indexOf("image")>-1&&b(function(){var c=new FileReader;c.readAsDataURL(a),c.onload=function(c){b(function(){a.dataUrl=c.target.result,f.resolve({dataUrl:a.dataUrl,i:e})})}}),f.promise},d.revalidate=function(){b(function(){d.$broadcast("schemaFormValidate")},100)}}}}]);
angular.module('ngSchemaFormFileType').run(['$templateCache', function($templateCache) {  'use strict';

  $templateCache.put('files.html',
    "<style type=\"text/css\">.file-objects .form-control-feedback,  .file-objects li label,.file-objects legend,.file-objects select, .file-objects input {display: none;}.noProgressTransition {transition: none;}</style><div ng-schema-file ng-model=\"$$value$$\" class=\"file-objects\"><div sf-array=\"form\" class=\"schema-form-array {{form.htmlClass}}\" ng-model=\"$$value$$\" ng-model-options=\"form.ngModelOptions\"><label ng-show=\"form.title && form.notitle !== true\" class=\"control-label\" ng-class=\"{'sr-only': !showTitle()}\">{{ form.title }}</label><br><div class=\"btn btn-default\" ng-model=\"files\" ng-file-select ng-file-change=\"upload($files)\" ng-multiple=\"!(form.schema.minItems == 1 && form.schema.maxItems == 1)\">{{ form.button_label }}</div><ol class=\"list-group\" ng-model=\"modelArray\" ui-sortable style=\"margin-top: 20px\"><li class=\"list-group-item {{form.fieldHtmlClass}}\" ng-repeat=\"item in modelArray track by $index\"><button ng-hide=\"form.readonly\" ng-click=\"deleteFromArray($index); revalidate();\" style=\"position: relative; z-index: 20\" type=\"button\" class=\"close pull-right\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button><div class=\"media-left\"><img class=\"media-object\" ng-src=\"{{item.dataUrl}}\" alt=\"\" style=\"max-width: 100px\" ng-if=\"item.dataUrl\"></div><h5>{{ item.name }}</h5><div class=\"progress\" style=\"height: 20px\"><div class=\"progress-bar progress-bar-success\" role=\"progressbar\" aria-valuenow=\"{{ item.progress }}\" aria-valuemin=\"0\" aria-valuemax=\"100\" ng-class=\"item.progress==100?'noProgressTransition':''\" style=\"width: {{ item.progress }}%\">{{ item.progress }}% Complete (success)</div></div><sf-decorator ng-init=\"arrayIndex = $index\" form=\"copyWithIndex($index)\"></sf-decorator></li></ol><div class=\"help-block\" style=\"color: #e74c3c\" ng-show=\"(hasError() && errorMessage(schemaError())) || form.description\" ng-bind-html=\"(hasError() && errorMessage(schemaError())) || form.description\"></div></div></div>"
  );
}]);